#
# Local copy of configuration file for post-processing
[location]
EADirectory=EA
ReleaseDirectory=schemas

[schema]
defaultNamespace=http://www.w3.org/2001/XMLSchema
name=metarSpeci.xsd
version=3.0
#
# prefix=uri schemaLocation
[imports]
gml=http://www.opengis.net/gml/3.2 http://schemas.opengis.net/gml/3.2.1/gml.xsd
iwxxm=http://icao.int/iwxxm/3.0 https://schemas.wmo.int/iwxxm/3.0/iwxxm.xsd
#
# Type0xx sequence -- generic types
#
[dataTypes]
dataTypes00=GM_ReferenceTypePropertyType gml:ReferenceType
dataTypes01=iwxxm:LengthWithNilReasonPropertyType iwxxm:LengthWithNilReasonType
dataTypes02=iwxxm:MeasureWithNilReasonPropertyType iwxxm:MeasureWithNilReasonType
dataTypes03=iwxxm:RelationalOperatorPropertyType iwxxm:RelationalOperatorType

[codeLists]
cloudType=iwxxm-us:ConvectiveCloudTypesType
firstSkyCoverValue=iwxxm:CloudAmountReportedAtAerodromeType
frequency=iwxxm-us:LightningFrequencyType
highCloudCharacter=iwxxm-us:CloudTypesType
lowCloudCharacter=iwxxm-us:CloudTypesType
middleCloudCharacter=iwxxm-us:CloudTypesType
obscurationAmount=iwxxm:CloudAmountReportedAtAerodromeType
observingSystemType=iwxxm-us:ObservingSystemTypeType
parameter=iwxxm-us:MeteorologicalSensorsType
pressureChangeIndicator=iwxxm-us:PressureChangingRapidlyType
pressureTendencyCharacteristic3hr=iwxxm-us:PressureTendencyCharacteristicType
processedWeatherElement=iwxxm-us:StatisticallyProcessedWeatherElementsType
qualitativeDistance=iwxxm-us:QualitativeDistanceType
secondSkyCoverValue=iwxxm:CloudAmountReportedAtAerodromeType
type=iwxxm-us:LightningTypeType
valueType=iwxxm-us:StatisticalFunctionTypeType
weatherCausingObscuration=iwxxm:AerodromePresentWeatherType
weatherPhenomenon=iwxxm:AerodromePresentWeatherType

[setNilAttribute]
comment="Bug in EA does not put nillable attribute in the XML even when nillable is set to 'true' in EA."
names=seaLevelPressure,pressureTendency3hr,snowDepth,sector,maxTemperature,minTemperature,processedValue
#
# attibutes often have doc strings. Bug in EA drops these.
[attributeDocStrings]
aboveSensorMaximum=Visibility is greater than sensor's maximum limits.
belowMinimum=If minimum visibility is below sensor limitations or, for the human observer, the nearest reference point, this attribute shall be set to true.
belowSensorMinimum=Visibility is less than sensor's minimum limits.
frontalPassage=Set to true if its reasonably certain that the wind shift was caused by a frontal passage.
inAllQuadrants=If event is occurring in all quadrants of the horizon, this shall be set to true and no angles or distances provided.
movingOverhead=True if thunderstorm is moving overhead at the observing platform.
visibilityBelowSensorMinimum=If sensor determines that horizontal visibility is reduced below its ability to measure accurately, this attribute shall be present and set to 'true'.

[adjustments]
comments=Final tweeking of XML that due to limitations of EA or the human ability to represent in UML
number=5

[adjustment0]
kind=ref
value=iwxxm-us:ConvectiveCloudLocation
attributes=maxOccurs,minOccurs
values=8,1

[adjustment1]
kind=ref
value=iwxxm-us:ObservedLightning
attributes=maxOccurs,minOccurs
values=4,1

[adjustment2]
kind=ref
value=iwxxm-us:RecentWeather
attributes=maxOccurs,minOccurs
values=unbounded,1

[adjustment3]
kind=type
value=iwxxm-us:ObservedLightningPropertyType
attributes=maxOccurs
values=1

[adjustment4]
kind=type
value=iwxxm-us:ConvectiveCloudLocationPropertyType
attributes=maxOccurs
values=1

[addendums]
comments=These addendums allow for one-off python code execution that are specific to a schema, not universally applicable to all.
number=1

[addendum0]
comments=This code extends the SectorType to allow it to be nilled for Convective cloud locations. Lightning is left alone.
code=sector = root.find('.//xs:complexType[@name="ConvectiveCloudLocationType"]/xs:sequence/xs:element[@name="sector"]', nameSpaces)
 uri = '{%%s}' %% nameSpaces['xs']
 complexType = ET.Element('%%scomplexType' %% uri )
 complexContent = ET.SubElement(complexType,'%%scomplexContent' %% uri)
 extension = ET.SubElement(complexContent,'%%sextension' %% uri)
 extension.set('base',sector.attrib.pop('type'))
 attribute = ET.SubElement(extension,'%%sattribute' %% uri)
 attribute.set('name','nilReason')
 attribute.set('type','gml:NilReasonType')
 sector.append(complexType)
